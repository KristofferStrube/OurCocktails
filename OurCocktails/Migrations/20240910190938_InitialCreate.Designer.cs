// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OurCocktails.DataBase;

#nullable disable

namespace OurCocktails.Migrations
{
    [DbContext(typeof(OurCocktailsContext))]
    [Migration("20240910190938_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("OurCocktails.Shared.Models.Drink", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Recipe")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Drinks");
                });

            modelBuilder.Entity("OurCocktails.Shared.Models.Family", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("FamilyId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.ToTable("Families");
                });

            modelBuilder.Entity("OurCocktails.Shared.Models.Ingredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("IngredientId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("OurCocktails.Shared.Models.IngredientLine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DrinkId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("FamilyId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("IngredientId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Unit")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DrinkId");

                    b.HasIndex("FamilyId");

                    b.HasIndex("IngredientId");

                    b.ToTable("IngredientLines");
                });

            modelBuilder.Entity("OurCocktails.Shared.Models.Family", b =>
                {
                    b.HasOne("OurCocktails.Shared.Models.Family", null)
                        .WithMany("Ancestors")
                        .HasForeignKey("FamilyId");
                });

            modelBuilder.Entity("OurCocktails.Shared.Models.Ingredient", b =>
                {
                    b.HasOne("OurCocktails.Shared.Models.Ingredient", null)
                        .WithMany("FamilyHierarchy")
                        .HasForeignKey("IngredientId");
                });

            modelBuilder.Entity("OurCocktails.Shared.Models.IngredientLine", b =>
                {
                    b.HasOne("OurCocktails.Shared.Models.Drink", null)
                        .WithMany("Ingredients")
                        .HasForeignKey("DrinkId");

                    b.HasOne("OurCocktails.Shared.Models.Family", "Family")
                        .WithMany()
                        .HasForeignKey("FamilyId");

                    b.HasOne("OurCocktails.Shared.Models.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId");

                    b.Navigation("Family");

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("OurCocktails.Shared.Models.Drink", b =>
                {
                    b.Navigation("Ingredients");
                });

            modelBuilder.Entity("OurCocktails.Shared.Models.Family", b =>
                {
                    b.Navigation("Ancestors");
                });

            modelBuilder.Entity("OurCocktails.Shared.Models.Ingredient", b =>
                {
                    b.Navigation("FamilyHierarchy");
                });
#pragma warning restore 612, 618
        }
    }
}
